
Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~
$ pwd
/c/Users/Siddhesh U S

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~
$ git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows) 
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~
$ cd Desktop

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop
$ mkdir gitDemo

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop
$ ls
 Assignments/            Office.lnk*                      desktop.ini
'Java Notes'/           'Outlook (PWA).lnk'*              gitDemo/
'Microsoft Teams.lnk'*   WindowsSensor.MaverickGyr.exe*   practice/

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop
$ cd gitDemo

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo
$ gitDemo git init
bash: gitDemo: command not found

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo
$ git init
Initialized empty Git repository in C:/Users/Siddhesh U S/Desktop/gitDemo/.git/

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git:(master) ls
bash: syntax error near unexpected token `master'

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git:ls
bash: git:ls: command not found

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ ls

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ ls -a
./  ../  .git/

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ ls .git
HEAD  config  description  hooks/  info/  objects/  refs/

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ touch names.text

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ touch names.txt

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        names.text
        names.txt

nothing added to commit but untracked files present (use "git add" to track)

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ rm -rf names.text

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        names.txt

nothing added to commit but untracked files present (use "git add" to track)

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git add names.txt

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   names.txt


Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git commit -m "names.txt file added"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Siddhesh U S@DESKTOP-7PL84PK.(none)')

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git config --global user.email "siddhesh.sawant@robosoftin.com"

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git config --global user.name "Siddhesh"

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git commit -m "names.txt file added"
[master (root-commit) 2dd2c73] names.txt file added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 names.txt

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ vi names.txt

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ cat names.txt
Siddhesh Sawant
Doing Git Demo

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   names.txt

no changes added to commit (use "git add" and/or "git commit -a")

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git add .
warning: in the working copy of 'names.txt', LF will be replaced by CRLF the next time Git touches it

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git add .

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   names.txt


Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git restore --staged names.txt

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   names.txt

no changes added to commit (use "git add" and/or "git commit -a")

Siddhesh U S@DESKTOP-7PL84PK MINGW64 ~/Desktop/gitDemo (master)
$
