spring.datasource.url=jdbc:mysql://localhost:3306/springbootjdbc
spring.datasource.username=root
spring.datasource.password=root



{
    "trainNumber" : 5,
    "trainName" : "SuperExpress",
    "trainSource" : "Udupi",
    "trainDestination" : "Kolkata",
    "airConditionerSeatPrice" : 2999,
    "generalSeatPrice" : 2599

}


{
    "trainNumber": 5,
    "trainDates" : "Saturday"

}

ALTER TABLE passenger_info
DROP COLUMN passenger_phone_number;

create schema railway_registration_db;

use railway_registration_db;

create table passenger_info(
passenger_id int primary key auto_increment, 
passenger_name varchar(20), 
passenger_gender varchar(20), 
passenger_age int
/*passenger_phone_number int*/
) ;

create table train_info(
train_number int primary key, 
train_name varchar(20), 
train_source varchar(20), 
train_destination varchar(20), 
ac_seat_price int, 
gen_seat_price int
);

create table available_dates(
train_number int , 
train_days varchar(20), 
foreign key(train_number) references train_info(train_number) on delete cascade on update cascade
);

create table seats(
train_number int, 
travel_date date,
available_ac_seats int, 
avialable_gen_seats int, 
booked_ac_seats int, 
booked_gen_seats int, 
foreign key(train_number) references train_info(train_number) on delete cascade on update cascade
);


create table ticket_booking_info(
ticket_id int primary key auto_increment, 
number_of_passengers int, 
train_number int, 
booking_date date, 
date_of_travel date, 
booking_status enum('CONFIRMED','WAITING'), 
train_source varchar(20), 
train_destination varchar(20), 
foreign key(train_number) references train_info(train_number)
);

create table passenger_ticket(
ticket_id int, 
passenger_id int,  
foreign key(ticket_id) references ticket_booking_info(ticket_id),  
foreign key(passenger_id) references passenger_info(passenger_id)
);

 alter table seats add primary key(travel_date,train_number);


